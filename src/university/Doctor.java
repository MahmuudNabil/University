/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package university;

import java.awt.ComponentOrientation;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author lapshop
 */
public class Doctor extends javax.swing.JFrame {

    public int choose=MainMenu.chD ;
    Connection conn =null;
    ResultSet rst =null;
    PreparedStatement ps =null;
    
    public Doctor() {
        initComponents();
       rightToLeft();
       if(choose==2)
       {
            this.setTitle("تعديل دكتور");
            name.setEnabled(false);
            mobile.setEnabled(false);
            male.setEnabled(false);
            female.setEnabled(false);
            address.setEnabled(false);
            jLabel2.setEnabled(false);
            jLabel3.setEnabled(false);
            jLabel4.setEnabled(false);
            jLabel5.setEnabled(false);
            jButton1.setIcon(new ImageIcon("E:\\University\\src\\images\\editS.jpg"));
       }
       if(choose==3)
       {
               this.setTitle("حذف دكتور");
                name.setEnabled(false);
                mobile.setEnabled(false);
                male.setEnabled(false);
                female.setEnabled(false);
                address.setEnabled(false);
                jLabel2.setEnabled(false);
                jLabel3.setEnabled(false);
                jLabel4.setEnabled(false);
                jLabel5.setEnabled(false);
                jButton1.setIcon(new ImageIcon("E:\\University\\src\\images\\deleteStudent.jpg"));
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        mobile = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        address = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocation(new java.awt.Point(2, 0));
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 204, 0));
        jLabel1.setText("رقم التعريف");

        id.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idKeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 0));
        jLabel2.setText("اسم الدكتور ");

        name.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 0));
        jLabel3.setText("رقم الموبايل");

        mobile.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 204, 0));
        jLabel4.setText("العنوان");

        address.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        address.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 204, 0));
        jLabel5.setText("الجنس");

        buttonGroup1.add(male);
        male.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        male.setForeground(new java.awt.Color(0, 204, 204));
        male.setText("ذكر");

        buttonGroup1.add(female);
        female.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        female.setForeground(new java.awt.Color(0, 204, 204));
        female.setText("انثى");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Add-Male-User.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/exit1.jpg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(female)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(male))
                            .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(58, 58, 58)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(67, 67, 67))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(address, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(male)
                        .addComponent(female)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(390, 350));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
  
        if(choose==1)
            insert();
        else if(choose==2)
            update();
        else
            delete();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyPressed
        if(evt.getKeyCode()== evt.VK_ENTER  )
        {
            if(id.getText().equals(""))
            {
                JOptionPane.showMessageDialog(null, "يرجى إدخال رقم التعريف");
            } else{
                try {
                    conn=ConnectionDataBase.connect();
                    ps=conn.prepareStatement("Select * from doctor where id='"+Integer.parseInt(id.getText())+"'");
                    rst=ps.executeQuery();
                    if(rst.next())
                    {
                         
                        id.setEnabled(false);
                        
                        name.setText(rst.getString(2));
                        jLabel2.setEnabled(true);
                        name.setEnabled(true);
                        
                        mobile.setText(rst.getString(4));
                        jLabel3.setEnabled(true);
                        mobile.setEnabled(true);
                        
                        address.setText(rst.getString(5));
                        jLabel4.setEnabled(true);
                        address.setEnabled(true);
                        
                        jLabel5.setEnabled(true);
                        String gender=rst.getString(6);
                        if(gender.equals(male.getText()))
                            male.setSelected(true);
                        else
                            female.setSelected(false);
                        male.setEnabled(true);
                        female.setEnabled(true);
                        
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }finally{
                    try {
                        conn.close();
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, ex.getMessage());
                    }
                }
                    
            }
        }
    }//GEN-LAST:event_idKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField mobile;
    private javax.swing.JTextField name;
    // End of variables declaration//GEN-END:variables

    private void rightToLeft() {
        id.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        name.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        mobile.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        male.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        female.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
        address.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
    }

    void setDefaultCloseOperation(Object object) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void insert() {
       
        String miss ="لقد نسيت ادخال البيانات التالية"+"\n";
       String gender=male.getText();
        if(female.isSelected())
           gender=female.getText();
        if(id.getText().equals(""))
            miss+="رقم الدكتور"+"\n";
        if(name.getText().equals(""))
            miss+="إسم الدكتور"+"\n";
        if(mobile.getText().equals(""))
            miss+="رقم الموبايل"+"\n";
        if(address.getText().equals(""))
            miss+="عنوان الدكتور"+"\n";
        if(!male.isSelected() && !female.isSelected())
            miss+="الجنس"+"\n";
         if(!id.getText().equals("") && !name.getText().equals("") && !address.getText().equals("")&& !mobile.getText().equals("") && (male.isSelected() || female.isSelected()))
         {
            try {
                conn=ConnectionDataBase.connect();
                ps=conn.prepareStatement("select * from doctor where id='"+Integer.parseInt(id.getText())+"'");
                rst=ps.executeQuery();
                if(rst.next())
                {
                    JOptionPane.showMessageDialog(null, "رقم الدكتور موجود مسبقا","موجود",2);
                }else{
                    ps=conn.prepareStatement("insert into doctor values('"+Integer.parseInt(id.getText())+"','"+name.getText()+"','123','"+mobile.getText()+"','"+address.getText()+"','"+gender+"')");
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "تمتت اضافة الدكتور بنجاح","اضافة الدكتور",2);
                    clear();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }finally{
                try {
                    conn.close();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
         }else{
            JOptionPane.showMessageDialog(null, miss, "فقد بيانات الدخول",2);
         }
    }

    private void update() {
               String miss ="لقد نسيت ادخال البيانات التالية"+"\n";
       String gender=male.getText();
        if(female.isSelected())
           gender=female.getText();
        
        if(name.getText().equals(""))
            miss+="إسم الدكتور"+"\n";
        if(mobile.getText().equals(""))
            miss+="رقم الموبايل"+"\n";
        if(address.getText().equals(""))
            miss+="عنوان الدكتور"+"\n";
        if(!male.isSelected() && !female.isSelected())
            miss+="الجنس"+"\n";
         if(!name.getText().equals("") &&! address.getText().equals("")&& !mobile.getText().equals("") && (male.isSelected() || female.isSelected()))
         {
            
                   try {
                       conn =ConnectionDataBase.connect();
                       ps=conn.prepareStatement("select * from doctor where id='"+Integer.parseInt(id.getText())+"'");
                       rst=ps.executeQuery();
                       if(rst.next())
                       {
                           ps=conn.prepareStatement("update doctor set nameD='"+name.getText()+"',password='123' , mobile='"+mobile.getText()+"',address='"+address.getText()+"',gender='"+gender+"'where id='"+Integer.parseInt(id.getText())+"'");
                           ps.execute();
                          
                           JOptionPane.showMessageDialog(null, "تم تعديل الدكتور بنجاح","تم التعديل",JOptionPane.INFORMATION_MESSAGE);
                           
                           clear();
                           id.setEnabled(true);
                           name.setEnabled(false);
                           mobile.setEnabled(false);
                           address.setEnabled(false);
                           male.setSelected(false);
                           female.setSelected(false);
                       }
                   } catch (SQLException ex) {
                       JOptionPane.showMessageDialog(null, ex.getMessage());
                   }finally{
                       try {
                           conn.close();
                       } catch (SQLException ex) {
                           Logger.getLogger(Doctor.class.getName()).log(Level.SEVERE, null, ex);
                       }
                   }
               
         }else{
            JOptionPane.showMessageDialog(null, miss, "فقد بيانات الدخول",2);
         }
    }

    private void delete() {
       String miss ="لقد نسيت ادخال البيانات التالية"+"\n";
       if(id.getText().equals(""))
            miss+="رقم الدكتور"+"\n";
       if(!id.getText().equals(""))
       {
            try {
                conn=ConnectionDataBase.connect();
                ps=conn.prepareStatement("select * from doctor where id='"+Integer.parseInt(id.getText())+"'");
                rst=ps.executeQuery();       
                
                if(rst.next())
                {
                     String doctor =rst.getString("nameD");
                    try{
                    ps=conn.prepareStatement("select * from course where nameDoctor='"+doctor+"'");        
                    rst=ps.executeQuery();
                    while(rst.next())
                    {
                        ps=conn.prepareStatement("update course set nameDoctor=' ' where nameDoctor='"+doctor+"'");
                        ps.execute();
                        
                    }
                    ps=conn.prepareStatement("delete from doctor where id='"+Integer.parseInt(id.getText())+"'");
                    ps.execute();
                    JOptionPane.showMessageDialog(null, "تم حذف الدكتور بنجاح","تم الحذف",JOptionPane.INFORMATION_MESSAGE);
                    clear();
                    }catch(Exception e){JOptionPane.showMessageDialog(null, "error");}
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }finally{
                try {
                    conn.close();
                } catch (SQLException ex) {
                    JOptionPane.showConfirmDialog(null, ex.getMessage());
                }
            }
       }else{
             JOptionPane.showMessageDialog(null, miss, "فقد بيانات الدخول",2);
       }
    }

    private void clear() {
        id.setText("");
        name.setText("");
        mobile.setText("");
        address.setText("");
        male.setSelected(false);
        female.setSelected(false);
    }
}
